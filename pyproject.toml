[tool.poetry]
name = "chimera-gw"
<<<<<<< HEAD
version = "2.0.0"
description = "Combined Hierarchical Inference Model for Electromagnetic and gRavitational-wave Analysis"
authors = ["Nicola Borghi <nicola.borghi6@unibo.it>", "Matteo Tagliazucchi <matteo.tagliazucchi2@unibo.it>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/CosmoStatGW/CHIMERA"
documentation = "https://chimera-gw.readthedocs.io/latest/"
packages = [
  {include = "CHIMERA"},
=======
version = "2.0"
description = "Combined Hierarchical Inference Model for Electromagnetic and gRavitational-wave Analysis"
authors = ["Nicola Borghi <nicola.borghi6@unibo.it>", "matteo.tagliazucchi2@unibo.it"]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/CosmoStatGW/CHIMERA"
documentation = "https://gwfast.readthedocs.io/en/latest/"
packages = [ 
    {include = "CHIMERA"},
>>>>>>> e567b68 (Update documentation for v2)
]

[tool.poetry.dependencies]
python = ">=3.10"
<<<<<<< HEAD
wheel = "*"
cython = "*"
numpy = ">=2.0"
scipy = "^1.15"
=======
numpy = ">=1.16"
scipy = ">=1.7"
>>>>>>> e567b68 (Update documentation for v2)
astropy = "^5.2"
h5py = "^3.5"
healpy = "^1.14"
matplotlib = "^3.4"
numba = ">=0.58"
scikit-learn = ">=1.0"
jax = "^0.4"
interpax = "*"
equinox = "*"
scikit-learn >= "1.0"
plum-dispatch = "*"
emcee = "*"
packaging = "*"
mpi4py = "^4.0"
mpi4jax = { version = "*", extras = ["no-build-isolation"] }
schwimmbad = "^0.3.2"

# Optional for docs
sphinx = { version = "5.3.0", optional = true }
sphinx-book-theme = { version = ">=1.0", optional = true }
nbsphinx = { version = ">=0.8.10", optional = true }
myst-parser = { version = "^0.18.1", optional = true }
readthedocs-sphinx-search = { version = "^0.1.2", optional = true }
sphinx-copybutton = { version = "^0.5.1", optional = true }
docutils = { version = "^0.17.1", optional = true }
requests = "^2.31.0"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-book-theme", "nbsphinx", "myst-parser", "readthedocs-sphinx-search", "sphinx-copybutton", "docutils"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
